pipeline {
    agent any

    triggers {
        // Poll SCM every minute
        pollSCM('* * * * *')
    }

    environment {
        IMAGE_NAME          = "garisonmike/messaging_app:latest"
        MYSQL_ROOT_PASSWORD = "rootpassword123"
        MYSQL_PASSWORD      = "changeme123"
        MYSQL_USER          = "messaging_user"
        MYSQL_DB            = "messaging_db"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Prepare .env') {
            steps {
                sh 'cp -f .env.example .env'
            }
        }

        stage('Build Services') {
            steps {
                sh 'docker compose build'
            }
        }

        stage('Start Services') {
            steps {
                sh '''
                set -e
                docker compose up -d db
                for i in {1..10}; do
                    if docker compose exec -T db mysqladmin ping -h localhost -u root -p${MYSQL_ROOT_PASSWORD} --silent; then
                        echo "MySQL is ready!"
                        break
                    fi
                    echo "Waiting for MySQL... ($i/10)"
                    sleep 5
                done
                '''
            }
        }

        stage('Run Tests') {
            steps {
                sh 'docker compose run --rm web sh -c "python manage.py migrate --noinput && python manage.py test"'
            }
        }

        stage('Build Application Image') {
            steps {
                sh 'docker build -t ${IMAGE_NAME} .'
            }
        }
    }

    post {
        always {
            sh 'docker compose down -v || true'
            sh 'rm -f .env'
            echo 'Pipeline finished!'
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Build failed. Check logs for details.'
        }
    }
}
